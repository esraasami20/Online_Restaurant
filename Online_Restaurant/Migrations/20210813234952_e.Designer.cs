// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_Restaurant.Models;

namespace Online_Restaurant.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    [Migration("20210813234952_e")]
    partial class e
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Online_Restaurant.Models.City", b =>
                {
                    b.Property<int>("City_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("bit");

                    b.HasKey("City_Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Online_Restaurant.Models.Customer", b =>
                {
                    b.Property<int>("customer_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("customer_Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("customer_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("customer_Phone")
                        .HasColumnType("int");

                    b.HasKey("customer_Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Online_Restaurant.Models.Menu", b =>
                {
                    b.Property<int>("Menu_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ischecked")
                        .HasColumnType("bit");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Menu_Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("Restaurant_Id")
                        .HasColumnType("int");

                    b.HasKey("Menu_Id");

                    b.HasIndex("Restaurant_Id");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Online_Restaurant.Models.MenuOrder", b =>
                {
                    b.Property<int>("Order_Id")
                        .HasColumnType("int");

                    b.Property<int>("Menu_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float?>("Total")
                        .HasColumnType("real");

                    b.HasKey("Order_Id", "Menu_Id");

                    b.HasIndex("Menu_Id");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("Online_Restaurant.Models.Order", b =>
                {
                    b.Property<int>("Order_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Order_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<float?>("Total_Price")
                        .HasColumnType("real");

                    b.Property<int?>("customer_Id")
                        .HasColumnType("int");

                    b.HasKey("Order_Id");

                    b.HasIndex("customer_Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Online_Restaurant.Models.Restaurant", b =>
                {
                    b.Property<int>("Restaurant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("City_Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Isdeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RestaurantImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Restaurant_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Restaurant_Id");

                    b.HasIndex("City_Id");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("Online_Restaurant.Models.Menu", b =>
                {
                    b.HasOne("Online_Restaurant.Models.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("Restaurant_Id");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Online_Restaurant.Models.MenuOrder", b =>
                {
                    b.HasOne("Online_Restaurant.Models.Menu", "Menu")
                        .WithMany("OrderItems")
                        .HasForeignKey("Menu_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Online_Restaurant.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("Order_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Online_Restaurant.Models.Order", b =>
                {
                    b.HasOne("Online_Restaurant.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("customer_Id");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Online_Restaurant.Models.Restaurant", b =>
                {
                    b.HasOne("Online_Restaurant.Models.City", "Cities")
                        .WithMany("Restaurants")
                        .HasForeignKey("City_Id");

                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Online_Restaurant.Models.City", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("Online_Restaurant.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Online_Restaurant.Models.Menu", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Online_Restaurant.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Online_Restaurant.Models.Restaurant", b =>
                {
                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
